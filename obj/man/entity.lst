ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 .globl cpct_memset_asm
                              2 .globl cpct_memcpy_asm
                              3 
                              4 
                              5 ;===================================================================================================================================================
                              6 ; Entity types   
                              7 ;===================================================================================================================================================
                              8 ; #define e_type_invalid  0x00
                              9 ; #define e_type_render   0x01
                             10 ; #define e_type_movable  0x02
                             11 ; #define e_type_input    0x04
                             12 ; #define e_type_ai       0x08
                             13 ; #define e_type_animated 0x10
                             14 ; #define e_type_default  0x7F
                             15 ; #define e_type_dead     0x80
                             16 
                             17 
                             18 ;===================================================================================================================================================
                             19 ; Manager data   
                             20 ;===================================================================================================================================================
                             21 
                             22 ;; Array de entidades
   0000                      23 _m_entities::
   0000                      24     .ds 84
                             25 
                             26 ;; Memoria vacia al final del array para controlar su final
   0054                      27 _m_emptyMemCheck::
   0054                      28     .ds 1
                             29 
                             30 ;; Direccion de memoria con la siguiente posicion del array libre 
   0055                      31 _m_next_free_entity::
   0055                      32     .ds 2
                             33 
                             34 ;; Direccion de memoria donde este la funcion de inversion de control
   0057                      35 _m_functionMemory::
   0057                      36     .ds 2
                             37 
   0059                      38 _m_matchedEntity::
   0059                      39     .ds 1
                             40 
                             41 ;; Numero de entidades creadas
   005A                      42 _m_numEntities::
   005A                      43     .ds 6
                             44 
                             45 
                             46 ;===================================================================================================================================================
                             47 ; FUNCION _man_entityInit   
                             48 ; Inicializa el manager de entidades y sus datos
                             49 ; NO llega ningun dato
                             50 ;===================================================================================================================================================
   0060                      51 _man_entityInit::
   0060 11 00 00      [10]   52     ld  DE, #_m_entities
   0063 3E 00         [ 7]   53     ld  A,  #0x00
   0065 32 54 00      [13]   54     ld  (_m_emptyMemCheck), a
   0068 32 5A 00      [13]   55     ld  (_m_numEntities), a
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



   006B 01 54 00      [10]   56     ld  BC, #0x0054
   006E CD 00 00      [17]   57     call    cpct_memset_asm
                             58     ;;Destroyed: AF & BC & DE & HL
                             59     
   0071 21 00 00      [10]   60     ld  hl, #_m_entities
   0074 22 55 00      [16]   61     ld  (_m_next_free_entity), hl
                             62     
   0077 C9            [10]   63     ret
                             64 
                             65 
                             66 ;===================================================================================================================================================
                             67 ; FUNCION _man_createEntity   
                             68 ; Crea una entidad
                             69 ; NO llega ningun dato
                             70 ;===================================================================================================================================================
   0078                      71 _man_createEntity::
   0078 ED 5B 55 00   [20]   72     ld  de, (_m_next_free_entity)
   007C 26 00         [ 7]   73     ld  h, #0x00
   007E 2E 0E         [ 7]   74     ld  l, #0x0E
   0080 19            [11]   75     add hl,de
   0081 22 55 00      [16]   76     ld  (_m_next_free_entity),hl
   0084 21 5A 00      [10]   77     ld  hl, #_m_numEntities
   0087 34            [11]   78     inc (hl)
   0088 6B            [ 4]   79     ld  l,e
   0089 62            [ 4]   80     ld  h,d
   008A 36 7F         [10]   81     ld  (hl), #0x7F
   008C C9            [10]   82     ret
                             83 
                             84 
                             85 
                             86 ;===================================================================================================================================================
                             87 ; FUNCION _man_entityForAllMatching
                             88 ; Ejecuta la funcion  de _m_functionMemory por cada entidad que cumpla con el tipo designado en  _m_matchedEntity
                             89 ; NO llega ningun dato
                             90 ;===================================================================================================================================================
   008D                      91 _man_entityForAllMatching::
   008D 21 00 00      [10]   92     ld  hl, #_m_entities
                             93     
   0090 7E            [ 7]   94     ld  a,(hl)
                             95     
   0091 B7            [ 4]   96     or a,a
   0092 C8            [11]   97     ret Z
   0093 E5            [11]   98     push hl
   0094 C3 B0 00      [10]   99     jp checkSignature
   0097                     100     not_invalid2:
   0097 E1            [10]  101         pop hl
   0098 E5            [11]  102         push hl
   0099 DD 21 A5 00   [14]  103         ld ix, #next_entity2
   009D DD E5         [15]  104         push ix
                            105 
   009F DD 2A 57 00   [20]  106         ld ix, (#_m_functionMemory)
   00A3 DD E9         [ 8]  107         jp (ix)
                            108 
   00A5                     109         next_entity2:
   00A5 E1            [10]  110         pop hl
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



   00A6 0E 0E         [ 7]  111         ld  c,#0x0E
   00A8 06 00         [ 7]  112         ld  b,#0x00
                            113 
   00AA 09            [11]  114         add hl,bc
   00AB E5            [11]  115         push hl
   00AC 7E            [ 7]  116         ld  a,(hl)
   00AD B7            [ 4]  117         or a,a 
   00AE 28 0D         [12]  118         jr  Z, allDone
   00B0                     119         checkSignature:
   00B0 3A 59 00      [13]  120         ld a,(#_m_matchedEntity)
   00B3 A6            [ 7]  121         and (hl)
   00B4 21 59 00      [10]  122         ld hl , #_m_matchedEntity
   00B7 96            [ 7]  123         sub (hl)
   00B8 28 DD         [12]  124         jr Z, not_invalid2
   00BA C3 A5 00      [10]  125         jp next_entity2
   00BD                     126     allDone:
   00BD E1            [10]  127     pop hl
   00BE C9            [10]  128     ret
                            129 
                            130 
                            131 ;===================================================================================================================================================
                            132 ; FUNCION _man_setEntity4Destroy
                            133 ; Establece la entidad para ser destruida
                            134 ; HL : La entidad para ser marcada
                            135 ;===================================================================================================================================================
   00BF                     136 _man_setEntity4Destroy::
   00BF 3E 80         [ 7]  137     ld a, #0x80
   00C1 B6            [ 7]  138     or (hl)
   00C2 77            [ 7]  139     ld (hl),a
   00C3 C9            [10]  140 ret
                            141 
                            142 ;===================================================================================================================================================
                            143 ; FUNCION _man_entityDestroy
                            144 ; Elimina de las entidades la entidad de HL y arregla el array de entidades 
                            145 ; para establecer la ultima entidad al espacio liberado por la entidad destruida 
                            146 ; HL : La entidad para ser destruida
                            147 ;===================================================================================================================================================
   00C4                     148 _man_entityDestroy::
   00C4 ED 5B 55 00   [20]  149     ld de, (#_m_next_free_entity)
   00C8 EB            [ 4]  150     ex de, hl
                            151     ;; HL = _m_next_free_entity
                            152     ;; DE = entity to destroy
                            153 
                            154 
                            155     ;; Buscamos la ultima entidad
   00C9 3E 0E         [ 7]  156     ld a, #0x0E
   00CB                     157     setLast:
   00CB 2B            [ 6]  158         dec hl
   00CC 3D            [ 4]  159         dec a
   00CD 20 FC         [12]  160         jr NZ, setLast
                            161     ;; de = e && hl = last
                            162 
                            163 
                            164     ;;Comprobamos que la ultima entidad libre y la entidad a destruir no sea la misma
                            165     ;;if( e != last)
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



   00CF 7B            [ 4]  166     ld a, e
   00D0 95            [ 4]  167     sub l
   00D1 28 02         [12]  168     jr Z, checkMemory
                            169 
   00D3 18 04         [12]  170     jr copy
   00D5                     171     checkMemory:
   00D5 7A            [ 4]  172     ld a,d
   00D6 94            [ 4]  173     sub h
   00D7 28 10         [12]  174     jr Z, no_copy 
                            175 
                            176     ;;Si no es la misma copiamos la ultima entidad al espacio de la entidad a destruir
   00D9                     177     copy:
                            178     ; cpct_memcpy(e,last,sizeof(Entity_t));
   00D9 06 00         [ 7]  179     ld b, #0x00
   00DB 0E 0E         [ 7]  180     ld c, #0x0E
   00DD CD 00 00      [17]  181     call cpct_memcpy_asm
                            182 
                            183     ;;Volvemos a asignar a hl el valor de la ultima entity
   00E0 21 55 00      [10]  184     ld hl, #_m_next_free_entity
   00E3 3E 0E         [ 7]  185     ld a, #0x0E
   00E5                     186     setLast2:
   00E5 2B            [ 6]  187         dec hl
   00E6 3D            [ 4]  188         dec a
   00E7 20 FC         [12]  189         jr NZ, setLast2
                            190 
                            191 
                            192     ;;Aquí liberamos el ultimo espacio del array de entidades y lo seteamos como el proximo espacio libre 
   00E9                     193     no_copy:
                            194     ;last->type = e_type_invalid;
   00E9 36 00         [10]  195     ld (hl),#0x00
                            196     ;m_next_free_entity = last;
   00EB 11 55 00      [10]  197     ld de, #_m_next_free_entity
   00EE EB            [ 4]  198     ex de, hl
   00EF 73            [ 7]  199     ld (hl), e
   00F0 23            [ 6]  200     inc hl
   00F1 72            [ 7]  201     ld (hl), d
                            202     ;    --m_num_entities;      
   00F2 21 5A 00      [10]  203     ld  hl, #_m_numEntities
   00F5 35            [11]  204     dec (hl)
   00F6 C9            [10]  205     ret
                            206 
                            207 
                            208 ;===================================================================================================================================================
                            209 ; FUNCION _man_entityUpdate
                            210 ; Recorre todas las entidades y destruye las entidades marcadas
                            211 ; NO llega ningun dato 
                            212 ;===================================================================================================================================================
   00F7                     213 _man_entityUpdate::
   00F7 21 00 00      [10]  214     ld hl, #_m_entities
                            215 
   00FA 34            [11]  216     inc (hl)
   00FB 35            [11]  217     dec (hl)
   00FC C8            [11]  218     ret Z 
   00FD 0E 0E         [ 7]  219     ld c, #0x0E
   00FF 06 00         [ 7]  220     ld b, #0x00    
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



   0101 3E 80         [ 7]  221     ld a, #0x80    
   0103                     222     valid:
   0103 A6            [ 7]  223         and (hl)
   0104 28 04         [12]  224         jr Z, _next_entity
   0106 20 BC         [12]  225         jr NZ, _man_entityDestroy
   0108 18 01         [12]  226         jr continue
                            227 
   010A                     228         _next_entity:
   010A 09            [11]  229             add hl, bc
                            230             ; jr continue
   010B                     231         continue:
   010B 3E 80         [ 7]  232             ld a, #0x80
   010D 34            [11]  233             inc (hl)
   010E 35            [11]  234             dec (hl)
   010F 20 F2         [12]  235             jr NZ, valid
   0111 C9            [10]  236     ret
                            237 
                            238 
                            239 ;===================================================================================================================================================
                            240 ; FUNCION _man_entity_freeSpace
                            241 ; Devuelve en a si hay espacio libre en las entidades para poder generar
                            242 ; NO llega ningun dato 
                            243 ;===================================================================================================================================================
   0112                     244 _man_entity_freeSpace::
   0112 21 5A 00      [10]  245         ld hl, #_m_numEntities
   0115 3E 06         [ 7]  246         ld a, #0x06
   0117 96            [ 7]  247         sub (hl)
   0118 C9            [10]  248     ret
                            249 
                            250 
                            251 
                            252 
                            253 
                            254 
